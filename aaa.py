
聚合前集群代价={'power_cost': 28718.992101782696, 'tolerance': 0.0, 'degree_of_concentration': 6039.0559583466, 'used_hms': 64}
支持HM级容错的 3层聚合  cost0={'power_cost': 17104.579670925694, 'tolerance': 0.0, 'degree_of_concentration': 3723.8010921398577, 'used_hms': 38}
 不支持容错的 2层聚合 cost1={'power_cost': 27378.88683615587, 'tolerance': 0.0, 'degree_of_concentration': 5774.725225116521, 'used_hms': 61}
聚合前集群代价={'power_cost': 62820.90501925023, 'tolerance': 0.0, 'degree_of_concentration': 13221.143477964244, 'used_hms': 140}
支持HM级容错的 3层聚合  cost0={'power_cost': 36911.7411045753, 'tolerance': 0.0, 'degree_of_concentration': 8036.803714148473, 'used_hms': 82}
 不支持容错的 2层聚合 cost1={'power_cost': 57907.11076426107, 'tolerance': 0.0, 'degree_of_concentration': 12240.304270760636, 'used_hms': 129}
聚合前集群代价={'power_cost': 28273.08212617934, 'tolerance': 0.0, 'degree_of_concentration': 5962.081829640956, 'used_hms': 63}
支持HM级容错的 3层聚合  cost0={'power_cost': 17552.085980835756, 'tolerance': 0.0, 'degree_of_concentration': 3819.6701819842856, 'used_hms': 39}
 不支持容错的 2层聚合 cost1={'power_cost': 26932.96437683905, 'tolerance': 0.0, 'degree_of_concentration': 5696.923374527978, 'used_hms': 60}
聚合前集群代价={'power_cost': 62797.29055864781, 'tolerance': 0.0, 'degree_of_concentration': 13174.109419082408, 'used_hms': 140}
支持HM级容错的 3层聚合  cost0={'power_cost': 35994.825275888536, 'tolerance': 0.0, 'degree_of_concentration': 7830.948573759312, 'used_hms': 80}
 不支持容错的 2层聚合 cost1={'power_cost': 57436.828689797236, 'tolerance': 0.0, 'degree_of_concentration': 12115.62152223226, 'used_hms': 128}
聚合前集群代价={'power_cost': 86601.70918918263, 'tolerance': 0.0, 'degree_of_concentration': 18249.31412112521, 'used_hms': 193}
支持HM级容错的 3层聚合  cost0={'power_cost': 50418.24061103814, 'tolerance': 0.0, 'degree_of_concentration': 10999.670278475873, 'used_hms': 112}
 不支持容错的 2层聚合 cost1={'power_cost': 79454.37311698253, 'tolerance': 0.0, 'degree_of_concentration': 16825.077747468582, 'used_hms': 177}


聚合前集群代价={'power_cost': 30501.901565836375, 'tolerance': 39, 'degree_of_concentration': 6409.49488266162, 'used_hms': 68}
支持HM级容错的 3层聚合  cost0={'power_cost': 17547.32900659218, 'tolerance': 29, 'degree_of_concentration': 3816.615515460409, 'used_hms': 39}
 不支持容错的 2层聚合 cost1={'power_cost': 26928.24478085213, 'tolerance': 29, 'degree_of_concentration': 5701.855587517474, 'used_hms': 60}
聚合前集群代价={'power_cost': 58324.25458741832, 'tolerance': 49, 'degree_of_concentration': 12267.367707822475, 'used_hms': 130}
支持HM级容错的 3层聚合  cost0={'power_cost': 35095.487897314815, 'tolerance': 51, 'degree_of_concentration': 7637.302697774883, 'used_hms': 78}
 不支持容错的 2层聚合 cost1={'power_cost': 52963.82954806031, 'tolerance': 28, 'degree_of_concentration': 11214.505851827038, 'used_hms': 118}
聚合前集群代价={'power_cost': 87503.14513425718, 'tolerance': 17, 'degree_of_concentration': 18468.1162169398, 'used_hms': 195}
支持HM级容错的 3层聚合  cost0={'power_cost': 53106.56038999448, 'tolerance': 34, 'degree_of_concentration': 11590.526456767862, 'used_hms': 118}
 不支持容错的 2层聚合 cost1={'power_cost': 79015.73417233903, 'tolerance': 32, 'degree_of_concentration': 16783.170917969666, 'used_hms': 176}

目前的支持HM级的容错貌似效果并不是很好哦
---------------------------------------------------------------------------

聚合前集群代价={'power_cost': 30506.692287757814, 'tolerance': 9, 'degree_of_concentration': 6412.360272445522, 'used_hms': 68}
支持HM级容错的 3层聚合  cost0={'power_cost': 20232.438003306965, 'tolerance': 17, 'degree_of_concentration': 4371.522489848114, 'used_hms': 45}
 不支持容错的 2层聚合 cost1={'power_cost': 28719.883518572013, 'tolerance': 10, 'degree_of_concentration': 6061.758079920188, 'used_hms': 64}
{1: [2, 2], 3: [1, 4], 5: [1, 2], 9: [1, 2], 11: [1, 3], 14: [2, 2], 15: [1, 4], 17: [1, 3], 19: [1, 3]}
{0: [1, 3], 2: [2, 2], 3: [2, 3], 5: [1, 2], 8: [2, 1], 11: [2, 2], 14: [1, 3], 17: [1, 3], 18: [3, 2], 19: [1, 3],20: [1, 3], 23: [2, 1], 24: [1, 4]}
{4: [2, 2], 8: [1, 2], 10: [1, 2], 13: [4, 1], 18: [1, 4], 21: [2, 2], 22: [1, 2], 24: [2, 3]}

聚合前集群代价={'power_cost': 60126.60733386329, 'tolerance': 9, 'degree_of_concentration': 12668.70450994537, 'used_hms': 134}
支持HM级容错的 3层聚合  cost0={'power_cost': 35557.59847871342, 'tolerance': 15, 'degree_of_concentration': 7753.488956513571, 'used_hms': 79}
 不支持容错的 2层聚合 cost1={'power_cost': 55659.54185250177, 'tolerance': 14, 'degree_of_concentration': 11783.936321877873, 'used_hms': 124}

聚合前集群代价={'power_cost': 90630.6442185228, 'tolerance': 10, 'degree_of_concentration': 19079.03094735929, 'used_hms': 202}
支持HM级容错的 3层聚合  cost0={'power_cost': 53553.80239614013, 'tolerance': 15, 'degree_of_concentration': 11658.0711637124, 'used_hms': 119}
 不支持容错的 2层聚合 cost1={'power_cost': 82589.95152326902, 'tolerance': 11, 'degree_of_concentration': 17486.40161376622, 'used_hms': 184}



---------------------------------------------------------------------------------------------
更改tolerance计算方式


聚合前集群代价={'power_cost': 30502.714634425065, 'tolerance': 10, 'degree_of_concentration': 6415.672877322597, 'used_hms': 68}
支持HM级容错的 3层聚合  cost0={'power_cost': 17994.877896524547, 'tolerance': 117, 'degree_of_concentration': 3914.8107557852863, 'used_hms': 40}
 不支持容错的 2层聚合 cost1={'power_cost': 27375.767556447423, 'tolerance': 10, 'degree_of_concentration': 5793.355929486828, 'used_hms': 61}
{1: [2, 3], 4: [1, 2], 9: [1, 3], 10: [1, 2], 11: [1, 4], 12: [1, 2], 14: [1, 4], 17: [1, 4], 22: [1, 4], 24: [1, 3]}
{1: [1, 4], 2: [2, 1], 3: [3, 1], 5: [1, 3], 7: [1, 2], 10: [2, 1], 15: [2, 2], 16: [1, 4], 17: [1, 4], 19: [2, 2],22: [3, 2], 23: [3, 0]}
{2: [1, 2], 3: [1, 3], 5: [1, 3], 8: [1, 2], 11: [1, 4], 13: [1, 3], 16: [2, 3], 17: [2, 3], 23: [1, 2], 24: [1, 3]}








聚合前集群代价={'power_cost': 63252.31033493533, 'tolerance': 6, 'degree_of_concentration': 13292.310437959566, 'used_hms': 141}
支持HM级容错的 3层聚合  cost0={'power_cost': 36003.08907390497, 'tolerance': 23, 'degree_of_concentration': 7850.562484956401, 'used_hms': 80}
 不支持容错的 2层聚合 cost1={'power_cost': 57445.13556444401, 'tolerance': 12, 'degree_of_concentration': 12146.102808646529, 'used_hms': 128}
聚合前集群代价={'power_cost': 91502.16820436729, 'tolerance': 11, 'degree_of_concentration': 19218.154584340926, 'used_hms': 204}
支持HM级容错的 3层聚合  cost0={'power_cost': 51298.43966032606, 'tolerance': 117, 'degree_of_concentration': 11184.507190527058, 'used_hms': 114}
 不支持容错的 2层聚合 cost1={'power_cost': 83908.19471374192, 'tolerance': 15, 'degree_of_concentration': 17716.792797073776, 'used_hms': 187}

!!!!!! 以上说明 detect_hm_independence()方法的独立性修复是有问题的

----------------------------------------------------------------------------------------------------------

3层mbbo聚合  cost1={'power_cost': 17553.664976098462, 'tolerance': 0.0, 'degree_of_concentration': 3652.84851919138, 'used_hms': 40}
 2层mbbo聚合 cost0={'used_hms': 65, 'v_balance_cost': 12.43134080946998, 'h_balance_cost': 13.056597091623905, 'h_average_load_index': 5.612706223696605, 'v_average_load_index': 4.99520247635963, 'power_cost': 29169.605704759975, 'tolerance': 0.0, 'degree_of_concentration': 6155.072132955545}
3层mbbo聚合  cost1={'power_cost': 17096.58050923681, 'tolerance': 0.0, 'degree_of_concentration': 3643.420914074566, 'used_hms': 43}
 2层mbbo聚合 cost0={'used_hms': 65, 'v_balance_cost': 4.302914127279199, 'h_balance_cost': 22.890111531314698, 'h_average_load_index': 6.674756375095161, 'v_average_load_index': 3.3661205560408183, 'power_cost': 29162.318850846048, 'tolerance': 0.0, 'degree_of_concentration': 6144.309262959995}
3层mbbo聚合  cost1={'power_cost': 16184.889123554183, 'tolerance': 0.0, 'degree_of_concentration': 3453.040811404254, 'used_hms': 42}
 2层mbbo聚合 cost0={'used_hms': 57, 'v_balance_cost': 11.032918259359192, 'h_balance_cost': 11.562691829363354, 'h_average_load_index': 6.125761918900966, 'v_average_load_index': 5.397090961635295, 'power_cost': 25585.37155306984, 'tolerance': 0.0, 'degree_of_concentration': 5409.715596631251}
3层mbbo聚合  cost1={'power_cost': 18433.93375095322, 'tolerance': 0.0, 'degree_of_concentration': 3926.3748633982023, 'used_hms': 46}
 2层mbbo聚合 cost0={'used_hms': 70, 'v_balance_cost': 3.3210722648651143, 'h_balance_cost': 3.503056156538343, 'h_average_load_index': 3.6253390964600816, 'v_average_load_index': 3.236602447499034, 'power_cost': 31402.362842639166, 'tolerance': 0.0, 'degree_of_concentration': 6616.832625345557}
3层mbbo聚合  cost1={'power_cost': 16631.09799362558, 'tolerance': 0.0, 'degree_of_concentration': 3554.3355712557977, 'used_hms': 42}
 2层mbbo聚合 cost0={'used_hms': 60, 'v_balance_cost': 5.078323213978832, 'h_balance_cost': 5.298558835881236, 'h_average_load_index': 3.8327561504027807, 'v_average_load_index': 3.4495407368775846, 'power_cost': 26909.066491173413, 'tolerance': 0.0, 'degree_of_concentration': 5642.558820194327}







-----------------------------------------------------------------------------------------------------

0 : {2: [1, 3], 3: [1, 3], 7: [1, 4], 9: [1, 3], 19: [1, 4], 23: [1, 4], 26: [1, 3], 29: [1, 4], 33: [1, 3], 35: [1, 2],
 36: [1, 3], 39: [1, 2], 41: [1, 4], 42: [1, 3], 45: [1, 3], 50: [1, 4], 52: [2, 3], 55: [1, 3], 86: [1, 2], 91: [1,
 4], 98: [1, 2], 106: [1, 3], 109: [1, 3], 114: [1, 2], 115: [1, 4], 116: [1, 4], 119: [1, 3], 125: [1, 3]}

3 : {0: [1, 3], 1: [1, 3], 3: [2, 2], 5: [1, 2], 6: [2, 3], 10: [2, 2], 12: [2, 2], 28: [1, 4], 29: [1, 4], 30: [1, 2],
33: [2, 2], 35: [1, 2], 37: [1, 4], 38: [1, 4], 40: [1, 2], 42: [1, 3], 46: [2, 2], 47: [2, 1], 48: [1, 3], 49: [1,
3], 50: [2, 3], 55: [1, 3], 57: [1, 3], 58: [1, 2], 62: [1, 4], 64: [1, 2], 65: [3, 2], 68: [1, 4], 69: [1, 4], 76:
[1, 3], 77: [3, 1], 78: [1, 3], 82: [1, 3], 84: [1, 4], 97: [1, 4], 98: [1, 2], 105: [2, 2], 106: [1, 3], 107: [1, 4
], 109: [1, 3], 111: [1, 3], 122: [1, 3], 124: [2, 1]}

2: {4: [1, 3], 7: [1, 4], 8: [1, 2], 9: [1, 3], 10: [1, 3], 14: [1, 4], 23: [1, 4], 26: [1, 3], 35: [1, 2], 37: [1, 4],
 41: [1, 4], 44: [1, 3], 59: [1, 2], 67: [1, 2], 80: [1, 3], 87: [1, 2], 93: [1, 4], 94: [1, 3], 95: [1, 3], 100: [1
, 2], 107: [1, 4], 110: [1, 3], 113: [1, 4], 114: [2, 1], 120: [1, 3], 124: [1, 2], 125: [1, 3]}

第二轮： 
0 : {386: [1, 2], 259: [1, 3], 133: [1, 2], 393: [1, 3], 268: [1, 4], 147: [1, 2], 25: [1, 3], 295: [1, 2], 425: [1, 3],
 311: [1, 4], 189: [1, 3], 195: [1, 3], 455: [1, 2], 202: [1, 4], 460: [1, 4], 339: [1, 3], 342: [1, 4], 92: [1, 2],
 483: [1, 4], 83: [1, 4], 375: [1, 2], 379: [1, 4], 253: [1, 4], 126: [1, 2]}

3 : {384: [1, 4], 2: [1, 4], 259: [1, 3], 4: [1, 4], 7: [1, 2], 268: [1, 4], 141: [1, 3], 151: [1, 2], 30: [1, 3], 287:
[1, 4], 288: [1, 2], 290: [1, 3], 291: [1, 4], 44: [1, 2], 45: [1, 3], 305: [1, 3], 306: [1, 2], 435: [1, 2], 180: [
1, 4], 309: [1, 3], 182: [1, 3], 311: [1, 4], 312: [2, 3], 313: [2, 3], 189: [1, 3], 117: [1, 2], 195: [1, 3], 71: [
1, 2], 462: [1, 3], 335: [1, 3], 464: [1, 4], 468: [1, 4], 334: [1, 4], 342: [1, 4], 216: [1, 4], 95: [1, 3], 336: [
1, 3], 109: [1, 2], 239: [1, 3], 112: [1, 2], 242: [1, 4], 245: [1, 4], 377: [1, 4], 250: [1, 4], 254: [1, 3], 255:
[2, 1]}

2: {129: [1, 4], 132: [1, 4], 262: [1, 3], 10: [1, 4], 270: [1, 3], 15: [1, 3], 19: [1, 3], 20: [1, 4], 407: [1, 4], 15
4: [1, 2], 36: [1, 4], 39: [1, 4], 173: [1, 4], 302: [1, 3], 175: [1, 2], 49: [1, 2], 437: [1, 4], 310: [1, 4], 58:
[1, 3], 318: [1, 4], 195: [1, 3], 452: [1, 4], 177: [1, 2], 459: [1, 4], 98: [1, 3], 14: [1, 2], 356: [1, 4], 475: [
1, 2], 221: [1, 4], 350: [1, 3], 482: [1, 4], 228: [1, 4], 108: [1, 4], 237: [1, 4], 115: [1, 2], 377: [1, 4]}


第3轮：
0 : {1: [1, 2], 1671: [1, 4], 651: [1, 2], 1422: [1, 4], 1298: [1, 3], 275: [1, 3], 406: [1, 2], 663: [1, 3], 926: [1, 3
], 674: [1, 4], 932: [1, 3], 38: [1, 3], 7: [1, 4], 44: [1, 4], 1202: [1, 2], 51: [1, 3], 951: [1, 2], 1595: [1, 4],
 1469: [1, 2], 461: [1, 4], 220: [1, 4], 989: [1, 2], 1147: [1, 2], 869: [1, 4], 1642: [1, 3], 635: [1, 4]}

3 : {258: [2, 3], 1035: [1, 4], 1036: [1, 4], 660: [1, 4], 1046: [1, 4], 1048: [1, 3], 409: [1, 4], 671: [1, 3], 326: [1
, 2], 294: [1, 2], 1193: [2, 3], 1195: [1, 2], 1196: [1, 4], 1197: [1, 4], 1454: [2, 3], 1199: [1, 3], 1201: [1, 3],
 1207: [1, 3], 834: [1, 4], 707: [1, 3], 1270: [1, 4], 1349: [2, 2], 1608: [1, 3], 1609: [1, 4], 1610: [1, 3], 889:
[1, 3], 1236: [1, 3], 1749: [2, 1], 1750: [1, 3], 633: [1, 3], 852: [1, 4], 374: [1, 3], 485: [2, 3], 486: [1, 4], 8
41: [1, 3], 1258: [1, 3], 875: [1, 2], 1517: [1, 4], 1651: [1, 4], 502: [1, 4], 1577: [2, 3], 888: [1, 4], 724: [1,
3], 890: [1, 2], 892: [1, 2], 382: [1, 2]}

2 : {132: [1, 2], 1089: [1, 4], 1163: [1, 2], 1295: [1, 3], 1425: [1, 4], 914: [1, 4], 1312: [1, 2], 1186: [1, 4], 1448:
 [1, 4], 1321: [1, 2], 52: [1, 4], 1077: [1, 4], 1720: [1, 3], 1726: [1, 3], 959: [1, 3], 833: [1, 3], 325: [1, 4],
1742: [1, 3], 79: [1, 4], 470: [1, 4], 352: [1, 4], 228: [1, 2], 103: [1, 3], 1256: [1, 3], 1383: [1, 4], 893: [1, 4
], 894: [1, 2], 503: [1, 2], 378: [1, 2], 381: [1, 2], 1662: [1, 3]}

第4轮：
0 : {1667: [1, 3], 901: [2, 1], 1805: [1, 4], 270: [1, 4], 400: [1, 3], 1172: [1, 3], 1301: [1, 4], 278: [1, 3], 921: [1, 4], 1562: [1, 4], 285: [1, 2], 33: [1, 2], 2092: [1, 4], 813: [1, 3], 814: [1, 2], 1976: [1, 3], 569: [1, 4], 60:[1, 3], 2377: [1, 2], 2509: [1, 3], 2127: [1, 4], 857: [1, 3], 2146: [1, 2], 739: [1, 4], 1899: [1, 3], 1133: [1, 3], 1906: [1, 3]}

3 : {2048: [1, 4], 1668: [1, 4], 2054: [1, 4], 10: [1, 3], 2315: [1, 4], 1036: [1, 3], 1422: [1, 3], 1425: [1, 4], 2322: [1, 2], 1300: [1, 4], 2325: [1, 4], 24: [1, 3], 28: [1, 4], 2335: [1, 3], 420: [2, 2], 774: [1, 3], 1576: [1, 3], 1065: [1, 4], 556: [1, 2], 2351: [1, 3], 1587: [1, 3], 1588: [1, 4], 1589: [2, 2], 313: [1, 2], 956: [1, 3], 318: [1, 3], 961: [1, 2], 706: [1, 4], 1219: [1, 2], 2120: [1, 4], 2316: [3, 1], 842: [1, 4], 1751: [1, 4], 1752: [1, 4], 481: [1, 4], 1635: [1, 3], 1637: [1, 3], 1638: [1, 2], 1768: [1, 4], 1212: [1, 4], 1772: [1, 4], 1298: [1, 2], 2324: [1, 4], 1019: [1, 2], 1407: [1, 4]}

2 : {1802: [1, 2], 1431: [1, 4], 652: [1, 3], 15: [1, 3], 1808: [1, 3], 2327: [1, 4], 1562: [1, 4], 677: [1, 2], 241: [1, 3], 1579: [1, 4], 2479: [1, 3], 176: [1, 3], 1969: [1, 2], 1202: [1, 4], 179: [1, 4], 2358: [1, 2], 695: [1, 4], 1340: [1, 3], 2112: [1, 3], 1474: [1, 2], 1477: [1, 3], 1869: [1, 2], 1743: [1, 3], 1872: [1, 4], 1749: [1, 4], 1112: [1, 4], 1627: [1, 2], 99: [1, 4], 2406: [1, 3], 359: [1, 2], 2025: [1, 2], 1575: [1, 2], 1520: [1, 2], 2417: [1, 2], 1650: [1, 4], 1013: [1, 2], 2047: [1, 4]}

第5轮：

0 : {7424: [1, 3], 2440: [1, 4], 7305: [1, 4], 3855: [1, 3], 1813: [1, 4], 5916: [1, 2], 4383: [1, 2], 6439: [1, 4], 6428: [1, 4], 7211: [1, 3], 2738: [1, 2], 1204: [1, 4], 6582: [1, 2], 4793: [1, 4], 3273: [1, 2], 216: [1, 3], 7133: [1, 2], 990: [1, 2], 3553: [1, 4], 102: [1, 4], 2669: [1, 4], 5747: [1, 2], 5493: [1, 3], 7162: [1, 4], 763: [1, 2]}

3 : {3457: [1, 2], 5891: [1, 4], 6151: [2, 3], 6743: [1, 3], 3416: [1, 3], 5394: [1, 3], 7215: [1, 4], 5911: [1, 2], 5912: [1, 2], 6171: [1, 2], 5405: [1, 2], 5920: [1, 2], 6308: [1, 4], 6310: [2, 3], 7207: [1, 2], 6744: [2, 2], 1321: [1, 3], 428: [1, 3], 429: [1, 4], 6190: [1, 2], 6173: [1, 2], 6192: [1, 3], 6771: [1, 4], 1335: [1, 3], 3000: [2, 3], 6331: [1, 3], 1471: [1, 4], 960: [1, 3], 962: [1, 4], 964: [2, 2], 7113: [1, 2], 6858: [1, 2], 6859: [1, 2], 3413:[1, 4], 3159: [1, 4], 5976: [1, 4], 7204: [1, 4], 3162: [1, 2], 7206: [1, 2], 6501: [1, 2], 482: [1, 4], 5221: [1, 3], 5223: [1, 4], 6505: [1, 3], 240: [1, 2], 497: [1, 4], 1139: [1, 4]}

2 : {4868: [1, 4], 3862: [1, 4], 2439: [1, 4], 5007: [1, 3], 2067: [1, 3], 4758: [1, 4], 3224: [1, 3], 4509: [1, 2], 927: [1, 2], 3616: [1, 4], 6951: [1, 2], 7: [1, 3], 44: [1, 4], 2781: [1, 4], 5425: [1, 4], 3384: [1, 2], 3898: [1, 4], 2875: [1, 4], 3265: [1, 4], 1348: [1, 2], 3399: [1, 4], 968: [1, 4], 460: [1, 4], 4562: [1, 3], 5971: [1, 4], 5460: [1, 4], 1749: [1, 3], 5213: [1, 4], 5729: [1, 3], 7138: [1, 3], 1638: [1, 3], 5741: [1, 4], 750: [1, 3], 6512: [1,3], 3441: [1, 4], 4988: [1, 4]}

