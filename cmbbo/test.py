
Start:
init_popu = {
    'c_rp': [0.39803995189060776, 0.1991658405314019, 0.39768889258222717, 0.3325366354778356, 0.1342777876545161, 0.01656148103282018, 0.05397241445867573, 0.1310434487858827, 0.2704227767280211, 0.008955044055479089, 0.1331721771022163, 0.4241489946289537, 0.3968269044094304, 0.33398198503451765, 0.2495301921879871, 0.08463941599263941, 0.48407314029569853, 0.33486458390354445, 0.14030090211415353, 0.04343243706425565, 0.26124013102124194, 0.3785576996809441, 0.24891073064760638, 0.38282191475385174, 0.21379682570484998, 0.24378931841585733, 0.3002020187123837, 0.1919340274682979, 0.46964883581045436, 0.4714404337487207, 0.06156666961513463, 0.021995671323702337, 0.38869392752558096, 0.12060983793092295, 0.07127347986816346, 0.3838773335994973, 0.37407500041696556, 0.13472434699437258, 0.04449859672699252, 0.36987986212047896, 0.3531740929128703, 0.3366870076071558, 0.16173162442617905, 0.15702730502599677, 0.03809488688757445, 0.08669477009365767, 0.05318386717506646, 0.16398068552521866, 0.2972309296170753, 0.39941631749265183],
    'c_rm': [0.37809063210515087, 0.14797875989440723, 0.446136333563489, 0.2846394747802726, 0.09475784196039902, 0.2182348067642732, 0.11710179440422402, 0.11099353151435348, 0.4389301157389788, 0.19750568192006432, 0.16627953082252578, 0.2996871108426934, 0.269498295337843, 0.4896607597493646, 0.14800148868523197, 0.22850523363734732, 0.3232851836249956, 0.4144842213761347, 0.0005388631986207315, 0.048552451636542565, 0.307887938597714, 0.44937996238431505, 0.18901768925024898, 0.3986574193072836, 0.14987527849489743, 0.2300124473863819, 0.42665785344140605, 0.20854072345543492, 0.371320197853085, 0.4346051333948291, 0.23579121395624217, 0.14212366009071636, 0.4881140695231102, 0.09807524881155391, 0.12772752227619394, 0.4308824936720783, 0.2927490230023475, 0.011984010378050941, 0.24100621927613597, 0.259224237003565, 0.2847917268190586, 0.4683640657503727, 0.12279332999634093, 0.06452735097775414, 0.029893211192067864, 0.1043024709467523, 0.18152753484222625, 0.18758561546418268, 0.32058458723754407, 0.4587901293671526],
    'v_rp': [1.0, 0.5, 0.6, 1.0, 0.3, 0.8, 1.0, 0.5, 1.0, 0.3, 0.5, 0.6, 1.0, 0.8, 1.0, 0.3, 0.5, 1.0, 0.5, 0.6, 0.6, 1.0, 1.0, 0.6, 1.0, 0.5, 0.6, 0.3, 1.0, 1.0, 0.8, 0.5, 1.0, 0.5, 1.0, 1.0, 0.8, 0.5, 0.6, 1.0, 0.5, 1.0, 0.5, 1.0, 1.0, 0.8, 1.0, 1.0, 0.5, 1.0], 
    'v_rm': [1.0, 0.4, 0.5, 0.8, 0.3, 0.7, 1.0, 0.4, 1.0, 0.3, 0.4, 0.5, 0.8, 0.7, 1.0, 0.3, 0.4, 1.0, 0.4, 0.5, 0.5, 0.8, 0.8, 0.5, 1.0, 0.4, 0.5, 0.3, 0.8, 1.0, 0.7, 0.4, 0.8, 0.4, 0.8, 0.8, 0.7, 0.4, 0.5, 1.0, 0.4, 1.0, 0.4, 1.0, 1.0, 0.7, 1.0, 1.0, 0.4, 0.8], 
    'v_p_cost': [[0, 0, 0.2495301921879871, 0.7362936470549859, 0.05318386717506646, 0.7230539550333492, 0.8218378872111809, 0.20444565697037975, 0.37407500041696556, 0.08463941599263941, 0.14260550925462528, 0.29502413431110136, 0, 0, 0.16173162442617905, 0, 0.01656148103282018, 0.7885778979820345, 0.04449859672699252, 0.3002020187123837, 0, 0, 0.38869392752558096, 0.15702730502599677, 0.46964883581045436, 0.13472434699437258, 0.03809488688757445, 0.06156666961513463, 0.39803995189060776, 0.6852372594535707, 0.008955044055479089, 0, 0.6665186205123532, 0.48407314029569853, 0, 0, 0.3366870076071558, 0.2786287975619556, 0.39941631749265183, 0.04343243706425565, 0, 0.7176864986573962, 0.05397241445867573, 0, 0.5101508616688484, 0.24378931841585733, 0.2972309296170753, 0.3785576996809441, 0, 0]],
    'v_m_cost': [[0, 0, 0.14800148868523197, 0.41801591843087094, 0.18152753484222625, 0.5440159638226236, 0.7458234444061824, 0.2940070530987197, 0.2927490230023475, 0.22850523363734732, 0.24019890890227028, 0.29857914697853616, 0, 0, 0.12279332999634093, 0, 0.2182348067642732, 0.9645704513714561, 0.24100621927613597, 0.42665785344140605, 0, 0, 0.4881140695231102, 0.06452735097775414, 0.371320197853085, 0.011984010378050941, 0.029893211192067864, 0.23579121395624217, 0.37809063210515087, 0.5844804118897265, 0.19750568192006432, 0, 0.7743002345296373, 0.3232851836249956, 0, 0, 0.4683640657503727, 0.3128431944021872, 0.4587901293671526, 0.048552451636542565, 0, 0.8131416406834183, 0.11710179440422402, 0, 0.496905627847963, 0.2300124473863819, 0.32058458723754407, 0.44937996238431505, 0, 0]],
    'h_p_cost': [[0.5, 0.5, 0.3, 0, 0, 1.0, 1.0, 1.0, 0, 0.6, 1.0, 0, 1.0, 1.0, 0, 1.0, 0, 0.5, 1.0, 0.6, 1.0, 1.0, 0.8, 0, 0.5, 0, 0, 1.0, 1.0, 1.0, 0, 0.6, 0, 0.3, 0.5, 0.3, 0.8, 0.6, 0, 1.0, 0, 0.5, 0.6, 0.8, 1.0, 0.8, 0, 0, 1.0, 0.6]]
    'h_m_cost': [[0.4, 0.4, 0.3, 0, 0, 1.0, 0.8, 1.0, 0, 0.5, 0.8, 0, 0.8, 1.0, 0, 1.0, 0, 0.4, 1.0, 0.5, 1.0, 1.0, 0.7, 0, 0.4, 0, 0, 1.0, 0.8, 1.0, 0, 0.5, 0, 0.3, 0.4, 0.3, 0.7, 0.5, 0, 1.0, 0, 0.4, 0.5, 0.7, 1.0, 0.7, 0, 0, 0.8, 0.5]],
    'population': [[[28, 28], [3, 12], [6, 39], [32, 10], [17, 20], [16, 1], [42, 48], [11, 49], [17, 20], [30, 45], [7, 17], [6, 39], [3, 12], [32, 10], [2, 9], [9, 2], [33, 0], [41, 29], [3, 12], [39, 44], [44, 21], [47, 15], [44, 21], [41, 29], [29, 27], [45, 43], [19, 31], [37, 24], [24, 13], [29, 27], [27, 33], [10, 41], [22, 6], [10, 41], [7, 17], [17, 20], [8, 18], [25, 48], [18, 34], [5, 22], [5, 22], [36, 36], [14, 7], [23, 37], [26, 42], [37, 24], [4, 35], [11, 49], [46, 5], [38, 19]]],
    'map_v_h': {2: 9, 3: 12, 4: 35, 5: 22, 6: 39, 7: 17, 8: 18, 9: 2, 10: 41, 11: 49, 14: 7, 16: 1, 17: 20, 18: 34, 19: 31, 22: 6, 23: 37, 24: 13, 25: 48, 26: 42, 27: 33, 28: 28, 29: 27, 30: 45, 32: 10, 33: 0, 36: 36, 37: 24, 38: 19, 39: 44, 41: 29, 42: 48, 44: 21, 45: 43, 46: 5, 47: 15},
    'map_v_h': {0: 32, 1: 2, 2: 3, 3: 38, 4: 11, 5: 45, 6: 47, 7: 19, 8: 22, 9: 11, 10: 23, 11: 26, 12: 28, 13: 30, 14: 32, 15: 11, 16: 2, 17: 32, 18: 19, 19: 32, 20: 32, 21: 32, 22: 32, 23: 32, 24: 32, 25: 23, 26: 32, 27: 3, 28: 32, 29: 32, 30: 32, 31: 32, 32: 32, 33: 32, 34: 32, 35: 32, 36: 32, 37: 32, 38: 32, 39: 32, 40: 32, 41: 32, 42: 32, 43: 32, 44: 32, 45: 32, 46: 32, 47: 32, 48: 32, 49: 32},
    }

The initial cost = {
    'power_cost': 15774.415138150007
    'v_balance_cost': 21.48024345578732,
    'v_average_load_index': 7.351676711191249,
    'h_balance_cost': 1855958.988489318,
    'h_average_load_index': 1258571.3631773263,
    'used_vms': 36,
    'used_hms': 35,
    'used_time': 0.0,
    }


End:(使用 dot-product 不加权求余弦夹角的方式进行打分)
FFDSum consolidation Bins = {
    'v_p_cost': [[0.0, 0.0, 0.0, 0.31977567846232485, 0.1568623831469737, 0.41923140557149324, 0.795728844472835, 0.2653212364403988, 0.9092901818068937, 0.16598234908147586, 0.4681003842775939, 0.0, 0.0, 0.0, 0.6945717713569748, 0.0, 0.48407314029569853, 0.9298408536358507, 0.24891073064760638, 0.0, 0.0, 0.0, 0.21379682570484998, 0.0, 0.5835121772225047, 0.46964883581045436, 0.0, 0.219363762987012, 0.37407500041696556, 0.3880484510786109, 0.16398068552521866, 0.0, 0.16173162442617905, 0.0, 0.0, 0.0, 0.2972309296170753, 0.0, 0.0, 0.6105362287691262, 0.0, 0.5495280461640918, 0.0, 0.0, 0.7152447072880999, 0.39941631749265183, 0.4443885843689864, 0.3002020187123837, 0.0, 0.0]],
    'v_m_cost': [[0.0, 0.0, 0.0, 0.24605400870596114, 0.21877366996289394, 0.3889419457270249, 0.8242269656686398, 0.2057513734747525, 0.9825894214711315, 0.26203303289781843, 0.3972258176140369, 0.0, 0.0, 0.0, 0.7386172265816722, 0.0, 0.3232851836249956, 0.9435110485412689, 0.18901768925024898, 0.0, 0.0, 0.0, 0.14987527849489743, 0.0, 0.6376622484345966, 0.371320197853085, 0.0, 0.24048924401539826, 0.2927490230023475, 0.596011756218361, 0.18758561546418268, 0.0, 0.12279332999634093, 0.0, 0.0, 0.0, 0.32058458723754407, 0.0, 0.0, 0.6840085620017524, 0.0, 0.7789066052602319, 0.0, 0.0, 0.9177440281346878, 0.4587901293671526, 0.6344486332635257, 0.42665785344140605, 0.0, 0.0]],
    'h_p_cost': [[1.0, 0.6, 0.8, 0.0, 0.0, 1.0, 0.5, 1.0, 0.0, 0.5, 1.0, 0.0, 0.5, 1.0, 0.0, 0.5, 0.0, 1.0, 1.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.8, 1.0, 0.8, 0.0, 1.0, 0.0, 1.0, 1.0, 0.8, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0]]
    'h_m_cost': [[0.8, 0.6, 0.7, 0.0, 0.0, 1.0, 0.4, 1.0, 0.0, 0.4, 1.0, 0.0, 0.4, 1.0, 0.0, 0.4, 0.0, 0.8, 1.0, 0.4, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 0.7, 0.8, 0.7, 0.0, 1.0, 0.0, 1.0, 1.0, 0.7, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0]], 
    'population': [[[6, 5], [3, 0], [6, 5], [5, 2], [7, 6], [4, 1], [8, 7], [7, 6], [14, 10], [9, 1], [17, 13], [14, 10], [10, 9], [24, 18], [24, 18], [27, 20], [16, 12], [29, 34], [4, 1], [39, 39], [41, 41], [44, 42], [18, 15], [46, 44], [22, 17], [41, 41], [47, 45], [39, 39], [25, 19], [8, 7], [46, 44], [39, 39], [17, 13], [3, 0], [10, 9], [8, 7], [28, 33], [27, 20], [41, 41], [17, 13], [39, 39], [44, 42], [32, 36], [9, 1], [17, 13], [5, 2], [29, 34], [30, 35], [36, 37], [45, 43]]],
    'map_v_h': {3: 0, 4: 1, 5: 2, 6: 5, 7: 6, 8: 7, 9: 1, 10: 9, 14: 10, 16: 12, 17: 13, 18: 15, 22: 17, 24: 18, 25: 19, 27: 20, 28: 33, 29: 34, 30: 35, 32: 36, 36: 37, 39: 39, 41: 41, 44: 42, 45: 43, 46: 44, 47: 45},
    } 
The cost of new state = {
    'power_cost': 11727.339711744004
    'v_balance_cost': 121.93521304483662,
    'v_average_load_index': 37.511847443456524,
    'h_balance_cost': 1974875.2835739115,
    'h_average_load_index': 1693845.8287543734,
    'used_vms': 27,
    'used_hms': 26,
    'used_time': 0.029052019119262695,
    }

End:（使用FFDSum 求权重的方式打分）
FFDSum consolidation Bins = {
    'v_p_cost': [[0.0, 0.0, 0.5814222317606363, 0.8404519658136339, 0.2912331418776521, 0.34470061543937625, 0.39941631749265183, 0.39803995189060776, 0.0, 0.01656148103282018, 0.46681442313235166, 0.2704227767280211, 0.0, 0.0, 0.0, 0.0, 0.2584852362434662, 0.0, 0.4241489946289537, 0.33398198503451765, 0.0, 0.0, 0.6898611005200261, 0.33486458390354445, 0.0, 0.4681003842775939, 0.3785576996809441, 0.264215625888099, 0.5143954823173604, 0.0, 0.5330071033638553, 0.0, 0.8974932749369191, 0.2984362416974894, 0.0, 0.0, 0.7836385381957058, 0.48407314029569853, 0.5614545960468272, 0.0, 0.0, 0.0, 0.26124013102124194, 0.0, 0.0, 0.6533761315603357, 0.0, 0.0, 0.0, 0.0]],
    'v_m_cost': [[0.0, 0.0, 0.4952276483986523, 0.7944092016223956, 0.2949737654906991, 0.667664072717542, 0.4587901293671526, 0.37809063210515087, 0.0, 0.2182348067642732, 0.3793973167406717, 0.4389301157389788, 0.0, 0.0, 0.0, 0.0, 0.3455071706052963, 0.0, 0.2996871108426934, 0.4896607597493646, 0.0, 0.0, 0.7531557925694313, 0.4144842213761347, 0.0, 0.3972258176140369, 0.44937996238431505, 0.27727306233687926, 0.689697737543953, 0.0, 0.6703963473510712, 0.0, 0.7928471029035087, 0.3783805121322448, 0.0, 0.0, 0.6931972176714196, 0.3232851836249956, 0.49563366151723787, 0.0, 0.0, 0.0, 0.307887938597714, 0.0, 0.0, 0.6362371879401424, 0.0, 0.0, 0.0, 0.0]],
    'h_p_cost': [[0.8999999999999999, 1.0, 0.8, 0.0, 0.0, 1.0, 0.8, 1.0, 0.0, 0.8999999999999999, 1.0, 0.0, 0.6, 1.0, 0.0, 0.6, 0.0, 0.6, 1.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.8, 0.6, 0.5, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]]
    'h_m_cost': [[0.8, 0.8, 0.7, 0.0, 0.0, 1.0, 0.7, 0.8, 0.0, 0.8, 0.8, 0.0, 0.5, 0.8, 0.0, 0.5, 0.0, 0.5, 0.8, 0.7, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 0.8, 0.7, 0.5, 0.4, 0.0, 0.7, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]], 
    'population': [[[7, 6], [4, 0], [2, 0], [10, 7], [10, 7], [9, 6], [4, 0], [27, 9], [11, 9], [16, 7], [27, 9], [18, 10], [25, 10], [19, 12], [16, 7], [33, 34], [37, 34], [23, 15], [2, 0], [2, 0], [42, 37], [26, 17], [38, 36], [36, 35], [33, 34], [36, 35], [5, 2], [38, 36], [45, 39], [30, 19], [30, 19], [45, 39], [32, 33], [38, 36], [25, 10], [3, 1], [32, 33], [32, 33], [5, 2], [3, 1], [22, 13], [22, 13], [45, 39], [36, 35], [4, 0], [3, 1], [28, 18], [28, 18], [28, 18], [6, 5]]],
    'map_v_h': {2: 0, 3: 1, 4: 0, 5: 2, 6: 5, 7: 6, 9: 6, 10: 7, 11: 9, 16: 7, 18: 10, 19: 12, 22: 13, 23: 15, 25: 10, 26: 17, 27: 9, 28: 18, 30: 19, 32: 33, 33: 34, 36: 35, 37: 34, 38: 36, 42: 37, 45: 39},
    } 

The cost of new state = {
    'power_cost': 9021.491554638
    'v_balance_cost': 9.951168235780992,
    'v_average_load_index': 6.901867578466257,
    'h_balance_cost': 870989.0618894692,
    'h_average_load_index': 203501.5480137922,
    'used_vms': 26,
    'used_hms': 20,
    'used_time': 0.005182027816772461,
    }

------以上是分别使用 FFDSum 和 Dotproduct 算法计算的虚拟机、容器聚合算法，接下来需要将mbbo 虚拟机、容器聚合算法进行对比-------------------------------------------------------------------------------------------------



Time cost: 10.2221181393

the init random chrom maybe is {2: 47, 3: 7, 4: 34, 5: 23, 6: 13, 7: 2, 8: 42, 9: 28, 10: 27, 11: 49, 14: 40, 16: 37, 17: 48, 18: 44, 19: 28, 22: 43, 23: 17, 24: 1, 25: 26, 26: 4, 27: 33, 28: 5, 29: 6, 30: 21, 32: 22, 33: 10, 36: 20, 37: 31, 38: 34, 39: 14, 41: 46, 42: 3, 44: 41, 45: 12, 46: 9, 47: 19}
use 34 pms        
the cost is {'power_cost': 15327.704768898002, 'migration_time_cost': 0, 'h_balance_cost': 1870477.671287096}

after mbbo, the elite chrom = {2: 34, 3: 8, 4: 34, 5: 23, 6: 13, 7: 2, 8: 42, 9: 9, 10: 11, 11: 40, 14: 7, 16: 10, 17: 48, 18: 26, 19: 15, 22: 43, 23: 49, 24: 1, 25: 2, 26: 17, 27: 40, 28: 44, 29: 0, 30: 21, 32: 24, 33: 10, 36: 12, 37: 31, 38: 9, 39: 5, 41: 6, 42: 26, 44: 38, 45: 33, 46: 14, 47: 46},
use 30 pms        
the cost is {'h_balance': 1925804.4500981984, 'migration_time': 1560, 'power': 13540.817388522}

-----以上是使用mbbo针对v-h架构的聚合算法进行的，发现确实仅以vm作为聚合粒度，聚合效果不如同时以vm、docker作为聚合粒度时的效果好-------------------------------------------------------------------------------------------------------